hmLoadTopic({
hmKeywords:"",
hmTitle:"Third Party WPF Control Libraries",
hmPrevLink:"application-icon.html",
hmNextLink:"",
hmParentLink:"fsharp-wpf-code-behind-application.html",
hmBreadCrumbs:"<a href=\"fsharp-wpf-code-behind-application.html\">F# WPF Code Behind Application<\/a>",
hmTitlePath:"F# WPF Code Behind Application > Third Party WPF Control Libraries",
hmHeader:"<h1 class=\"p_Heading1\" style=\"page-break-after: avoid;\"><span class=\"f_Heading1\">Third Party WPF Control Libraries<\/span><\/h1>\n\r",
hmBody:"<p class=\"p_Normal\" style=\"margin: 0px 0px 0.9375rem 0px;\"><span style=\"font-family: Arial,Helvetica,sans-serif; color: #242729;\">If you add controls from third party libraries in a C# WPF project, the XAML file will normally have lines like this one.<\/span><\/p>\n\r<div style=\"text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;\"><table style=\"background-color:#f8f8f8; border:solid thin #c0c0c0; border-spacing:0px;\">\n\r<tr style=\"text-align:left;vertical-align:top;\">\n\r<td style=\"vertical-align:top; padding:0.4375rem; border:none\"><p class=\"p_CodeExample\"><span class=\"f_CodeExample\">xmlns:xctk=&quot;http:\/\/schemas.xceed.com\/wpf\/xaml\/toolkit&quot;<\/span><\/p>\n\r<\/td>\n\r<\/tr>\n\r<\/table>\n\r<\/div>\n\r<p class=\"p_Normal\">&nbsp;<\/p>\n\r<p class=\"p_Normal\" style=\"background: #ffffff;\"><span style=\"font-family: Arial,Helvetica,sans-serif; color: #242729;\">This will perhaps not work with FsXaml.<\/span><\/p>\n\r<p class=\"p_Normal\" style=\"background: #ffffff; margin: 1.0000rem 0px 0px 0px;\"><span style=\"font-family: Arial,Helvetica,sans-serif; color: #242729;\">The designer and the compiler accepts that line, but there will probably be an exception at runtime complaining about the 3rd party type not being found when reading the XAML.<\/span><\/p>\n\r<p class=\"p_Normal\" style=\"background: #ffffff; margin: 1.0000rem 0px 1.0000rem 0px;\"><span style=\"font-family: Arial,Helvetica,sans-serif; color: #242729;\">Try something like the following instead.<\/span><\/p>\n\r<div style=\"text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;\"><table style=\"background-color:#f8f8f8; border:solid thin #c0c0c0; border-spacing:0px;\">\n\r<tr style=\"text-align:left;vertical-align:top;\">\n\r<td style=\"vertical-align:top; padding:0.4375rem; border:none\"><p class=\"p_CodeExample\"><span class=\"f_CodeExample\">xmlns:xctk=&quot;clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit&quot;<\/span><\/p>\n\r<\/td>\n\r<\/tr>\n\r<\/table>\n\r<\/div>\n\r<p class=\"p_Normal\">&nbsp;<\/p>\n\r<p class=\"p_Normal\"><span style=\"font-family: Arial,Helvetica,sans-serif; color: #242729; background-color: #ffffff;\">This then is an example of a control that depends on the above.<\/span><\/p>\n\r<p class=\"p_Normal\">&nbsp;<\/p>\n\r<div style=\"text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;\"><table style=\"background-color:#f8f8f8; border:solid thin #c0c0c0; border-spacing:0px;\">\n\r<tr style=\"text-align:left;vertical-align:top;\">\n\r<td style=\"vertical-align:top; padding:0.4375rem; border:none\"><p class=\"p_CodeExample\"><span class=\"f_CodeExample\">&lt;xctk:IntegerUpDown&nbsp;Name=&quot;tbInput&quot;&nbsp;Increment=&quot;1&quot;&nbsp;Maximum=&quot;10&quot;&nbsp;Minimum=&quot;0&quot;&nbsp;Canvas.Left=&quot;13&quot;&nbsp;Canvas.Top=&quot;27&quot;&nbsp;Width=&quot;270&quot;\/&gt;<\/span><\/p>\n\r<\/td>\n\r<\/tr>\n\r<\/table>\n\r<\/div>\n\r<p class=\"p_Normal\">&nbsp;<\/p>\n\r<p class=\"p_Normal\"><span style=\"font-family: Arial,Helvetica,sans-serif; color: #242729; background-color: #ffffff;\">The library used in this example is the Extended Wpf Toolkit, available free of charge through NuGet or as installer.<\/span><\/p>\n\r<p class=\"p_Normal\">&nbsp;<\/p>\n\r<p class=\"p_Normal\"><span style=\"font-family: Arial,Helvetica,sans-serif; color: #242729; background-color: #ffffff;\">If you download libraries through NuGet, then the controls are not available in the Toolbox, but they still show in the designer if you add them manually in XAML, and the properties are available in the Properties pane. In the case of Extended Wpf Toolkit, there is an installer that makes the controls available in the Toolbox in Visual Studio.<\/span><\/p>\n\r"
})
